{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Cin√© Book Scrapping REST API",
    "description": "",
    "license": {
      "name": "MIT Licence",
      "url": "https://github.com/NemesisX1/canal_olympia_scrapping_api/blob/main/LICENSE.md"
    }
  },
  "tags": [
    {
      "name": "/",
      "description": ""
    },
    {
      "name": "Theaters",
      "description": "Fetch theaters informations"
    },
    {
      "name": "Movies",
      "description": "Fetch movies informations"
    }
  ],
  "securityDefinitions": {},
  "paths": {
    "/": {
      "get": {
        "tags": [
          "/"
        ],
        "summary": "",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "/"
        ],
        "summary": "Redirect to the health status page",
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/movies": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Fetch all the available movies",
        "description": "Fetch all the available movies",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "description": "The response language",
            "schema": {
              "type": "string",
              "enum": [
                "fr",
                "en"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "The creator"
                    },
                    "url": {
                      "type": "string",
                      "example": "https://example.com"
                    },
                    "img": {
                      "type": "string",
                      "example": "https://example.com"
                    },
                    "slug": {
                      "type": "string",
                      "example": "the-creator"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "The creator"
                    },
                    "url": {
                      "type": "string",
                      "example": "https://example.com"
                    },
                    "img": {
                      "type": "string",
                      "example": "https://example.com"
                    },
                    "slug": {
                      "type": "string",
                      "example": "the-creator"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Your body or query was bad formatted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your body or query was bad formatted"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "field"
                          },
                          "value": {
                            "type": "string",
                            "example": "zk"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value"
                          },
                          "path": {
                            "type": "string",
                            "example": "lang"
                          },
                          "location": {
                            "type": "string",
                            "example": "query"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your body or query was bad formatted"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "field"
                          },
                          "value": {
                            "type": "string",
                            "example": "zk"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value"
                          },
                          "path": {
                            "type": "string",
                            "example": "lang"
                          },
                          "location": {
                            "type": "string",
                            "example": "query"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/movies/{theaterSlug}": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Fetch all the available movies at a given theater",
        "description": "Fetch all the available movies at a given theater",
        "parameters": [
          {
            "name": "theaterSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The response language",
            "schema": {
              "type": "string",
              "enum": [
                "fr",
                "en"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TheaterMovieBrief"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TheaterMovieBrief"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Theater not found"
                    },
                    "errors": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Theater not found"
                    },
                    "errors": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Your body or query was bad formatted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your body or query was bad formatted"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "field"
                          },
                          "value": {
                            "type": "string",
                            "example": "zk"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value"
                          },
                          "path": {
                            "type": "string",
                            "example": "lang"
                          },
                          "location": {
                            "type": "string",
                            "example": "query"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your body or query was bad formatted"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "field"
                          },
                          "value": {
                            "type": "string",
                            "example": "zk"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value"
                          },
                          "path": {
                            "type": "string",
                            "example": "lang"
                          },
                          "location": {
                            "type": "string",
                            "example": "query"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/movies/infos/{slug}": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Fetch movie informations for a given movie slug",
        "description": "Fetch movie informations for a given movie slug",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The response language",
            "schema": {
              "type": "string",
              "enum": [
                "fr",
                "en"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TheaterMovie"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TheaterMovie"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "this slug was not found"
                    },
                    "errors": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "this slug was not found"
                    },
                    "errors": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Your body or query was bad formatted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your body or query was bad formatted"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "field"
                          },
                          "value": {
                            "type": "string",
                            "example": "zk"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value"
                          },
                          "path": {
                            "type": "string",
                            "example": "lang"
                          },
                          "location": {
                            "type": "string",
                            "example": "query"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your body or query was bad formatted"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "field"
                          },
                          "value": {
                            "type": "string",
                            "example": "zk"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value"
                          },
                          "path": {
                            "type": "string",
                            "example": "lang"
                          },
                          "location": {
                            "type": "string",
                            "example": "query"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/movies/diffusion-infos/{slug}": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Fetch movie diffusion informations for a given movie slug",
        "description": "Fetch movie diffusion informations for a given movie slug",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "theaterSlug",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The response language",
            "schema": {
              "type": "string",
              "enum": [
                "fr",
                "en"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TheaterMovieDiffusionInfo"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TheaterMovieDiffusionInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. It also give the same answers when he didn't find the given theater",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "This slug or theater was not found"
                    },
                    "errors": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "This slug or theater was not found"
                    },
                    "errors": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Your body or query was bad formatted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your body or query was bad formatted"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "field"
                          },
                          "value": {
                            "type": "string",
                            "example": "zk"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value"
                          },
                          "path": {
                            "type": "string",
                            "example": "lang"
                          },
                          "location": {
                            "type": "string",
                            "example": "query"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your body or query was bad formatted"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "field"
                          },
                          "value": {
                            "type": "string",
                            "example": "zk"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value"
                          },
                          "path": {
                            "type": "string",
                            "example": "lang"
                          },
                          "location": {
                            "type": "string",
                            "example": "query"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/theaters/names": {
      "get": {
        "tags": [
          "Theaters"
        ],
        "summary": "Fetch all the available theaters name",
        "description": "Return an array of strings with the theaters name",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TheaterName"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TheaterName"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/theaters/infos/{theaterSlug}": {
      "get": {
        "tags": [
          "Theaters"
        ],
        "summary": "Fetch informations about a specified theater giving his name",
        "description": "Fetch informations about a specified theater giving his name",
        "parameters": [
          {
            "name": "theaterSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The response language",
            "schema": {
              "type": "string",
              "enum": [
                "fr",
                "en"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TheaterInfos"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TheaterInfos"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Theater not found"
                    },
                    "errors": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Theater not found"
                    },
                    "errors": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Your body or query was bad formatted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your body or query was bad formatted"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "field"
                          },
                          "value": {
                            "type": "string",
                            "example": "zk"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value"
                          },
                          "path": {
                            "type": "string",
                            "example": "lang"
                          },
                          "location": {
                            "type": "string",
                            "example": "query"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your body or query was bad formatted"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "field"
                          },
                          "value": {
                            "type": "string",
                            "example": "zk"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value"
                          },
                          "path": {
                            "type": "string",
                            "example": "lang"
                          },
                          "location": {
                            "type": "string",
                            "example": "query"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/escape-games/": {
      "get": {
        "tags": [
          "Escape Games"
        ],
        "summary": "Fetch informations current escape games",
        "description": "",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "description": "The response language",
            "schema": {
              "type": "string",
              "enum": [
                "fr",
                "en"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TheaterEscapeGame"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TheaterEscapeGame"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    },
                    "errors": {
                      "type": "string",
                      "example": "any"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Theater not found"
                    },
                    "errors": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Theater not found"
                    },
                    "errors": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Your body or query was bad formatted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your body or query was bad formatted"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "field"
                          },
                          "value": {
                            "type": "string",
                            "example": "zk"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value"
                          },
                          "path": {
                            "type": "string",
                            "example": "lang"
                          },
                          "location": {
                            "type": "string",
                            "example": "query"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your body or query was bad formatted"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "field"
                          },
                          "value": {
                            "type": "string",
                            "example": "zk"
                          },
                          "msg": {
                            "type": "string",
                            "example": "Invalid value"
                          },
                          "path": {
                            "type": "string",
                            "example": "lang"
                          },
                          "location": {
                            "type": "string",
                            "example": "query"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TheaterName": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "example": "any"
          },
          "cities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "any"
                },
                "theaters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "slug": {
                        "type": "string",
                        "example": "any"
                      },
                      "name": {
                        "type": "string",
                        "example": "any"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "TheaterName"
        }
      },
      "TheaterMovie": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "The Creator"
          },
          "slug": {
            "type": "string",
            "example": "the-creator"
          },
          "genre": {
            "type": "string",
            "example": "Horror"
          },
          "duration": {
            "type": "string",
            "example": "1h20"
          },
          "releaseDate": {
            "type": "string",
            "example": "10-10-2023"
          },
          "descriptionBrief": {
            "type": "string",
            "example": "This is a nice movie"
          },
          "trailerLink": {
            "type": "string",
            "example": "https://example.com"
          }
        },
        "xml": {
          "name": "TheaterMovie"
        }
      },
      "TheaterMovieBrief": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "The Creator"
          },
          "slug": {
            "type": "string",
            "example": "the-creator"
          },
          "date": {
            "type": "string",
            "example": "10-10-2023"
          },
          "hour": {
            "type": "string",
            "example": "1h12"
          },
          "language": {
            "type": "string",
            "example": "en"
          },
          "img": {
            "type": "string",
            "example": "https://example.com"
          },
          "url": {
            "type": "string",
            "example": "https://example.com"
          }
        },
        "xml": {
          "name": "TheaterMovieBrief"
        }
      },
      "TheaterMovieDiffusionInfo": {
        "type": "object",
        "properties": {
          "theater": {
            "type": "string",
            "example": "wologuede"
          },
          "dates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "weekDay": {
                  "type": "string",
                  "example": "Mar"
                },
                "weekNumber": {
                  "type": "string",
                  "example": "23"
                },
                "hours": {
                  "type": "array",
                  "example": [
                    "10:40",
                    "10:50"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "TheaterMovieDiffusionInfo"
        }
      },
      "TheaterInfos": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "wologuede"
          },
          "lang": {
            "type": "string",
            "example": "en"
          },
          "location": {
            "type": "string",
            "example": "Cotonou"
          },
          "locationUrl": {
            "type": "string",
            "example": "https://example.com"
          },
          "pricing": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "people": {
                  "type": "string",
                  "example": "Children"
                },
                "price": {
                  "type": "string",
                  "example": "1500 XOF"
                }
              }
            }
          },
          "media": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Cin√© Book"
                },
                "link": {
                  "type": "string",
                  "example": "https://example.com"
                }
              }
            }
          }
        },
        "xml": {
          "name": "TheaterInfos"
        }
      },
      "TheaterEscapeGame": {
        "type": "object",
        "properties": {
          "theaterName": {
            "type": "string",
            "example": "any"
          },
          "name": {
            "type": "string",
            "example": "any"
          },
          "img": {
            "type": "string",
            "example": "https://example.com"
          },
          "price": {
            "type": "number",
            "example": 123
          },
          "groupSizeMin": {
            "type": "number",
            "example": 123
          },
          "groupSizeMax": {
            "type": "number",
            "example": 123
          },
          "difficulty": {
            "type": "number",
            "example": 123
          },
          "description": {
            "type": "string",
            "example": "any"
          },
          "minAge": {
            "type": "number",
            "example": 123
          }
        },
        "xml": {
          "name": "TheaterEscapeGame"
        }
      }
    }
  },
  "url": "http://localhost:3123"
}